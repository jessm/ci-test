name: Build and deploy

on:
  push:
    branches: [ "live" ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: 'actions/checkout@v3'
    - name: Copy a test file
      id: copy_test
      run: |
        # docker build -o type=tar,dest=ulticlipper-proxy-prod.tar.gz -f deploy/dockerfiles/caddy.dockerfile .
        # docker build -o type=tar,dest=ulticlipper-backend-prod.tar.gz -f deploy/dockerfiles/django-prod.dockerfile .
        tar -zcvf artifacts.tar.gz dev docker-compose-prod.yml # ulticlipper-proxy-prod.tar.gz ulticlipper-backend-prod.tar.gz
    
    - uses: actions/upload-artifact@v3
      with:
        name: deploy-artifacts
        path: artifacts.tar.gz

  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: 'actions/checkout@v3'
    
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    
    - uses: actions/download-artifact@v3
      with:
        name: deploy-artifacts
        
    - id: 'scp'
      run: |
        echo ${{ secrets.GCP_SSH_PRIVATE_KEY }} > ssh_key_file
        chmod 0600 ssh_key_file
        scp -i ssh_key_file artifacts.tar.gz 481444103467-compute@ulticlipper.jessmuir.com:/var
    
    - id: 'compute-ssh'
      uses: 'google-github-actions/ssh-compute@v0.1.1'
      with:
        instance_name: cos-test
        zone: us-east1-b
        user: 481444103467-compute
        ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY }}'
        # command: docker run bash:5.2.9-alpine3.16 echo testing testing 1 2 3
        command: mkdir -p /var/deploy && echo ${{ secrets.DJANGO_SECRET_KEY }} > /var/deploy/.env
